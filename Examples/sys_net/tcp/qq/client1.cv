#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#include "tcp.h"

int main( int argc, char ** argv )
{
	if( argc != 3 ) {
		printf("Usage: %s ipaddr login_name\n", argv[0] );
		exit( 1 );
	}

	int sock_fd = socket( AF_INET, SOCK_STREAM, 0 );
	int ret;

	struct sockaddr_in server_addr;
	server_addr.sin_family = AF_INET;
	server_addr.sin_port = htons( PORT_NUM );
	server_addr.sin_addr.s_addr = inet_addr( argv[1] );
	ret = connect( sock_fd, (SA*)&server_addr, ADDR_LEN );
	if( ret == -1 ) {
		perror("connect");
		exit( 2 );
	}
	send( sock_fd, argv[2], strlen(argv[2])+1, 0 );	

	while( 1 ) {
		
		fd_set readset;
		FD_ZERO( &readset );
		FD_SET( STDIN_FILENO, &readset );
		FD_SET( sock_fd, &readset );
		
		int sel_ret;
		sel_ret = select( sock_fd + 1, &readset, NULL, NULL, NULL );
		if( sel_ret < 0 ) {
			perror("select");
			exit( 3 );
		} else if( sel_ret > 0 ) {
			char read_buf[1000];
			bzero( read_buf, sizeof(read_buf) );
			int read_count;

			if( FD_ISSET( STDIN_FILENO, &readset ) ) {
				read_count = read( STDIN_FILENO, read_buf, sizeof(read_buf) );	
				send( sock_fd, read_buf, read_count + 1 , 0 );
			}

			char recv_buf[1500];
			if( FD_ISSET( sock_fd, &readset ) ) {
				recv( sock_fd, recv_buf, sizeof(recv_buf), 0 );
				printf("message: %s\n", recv_buf );
			}
		}
	}

	close( sock_fd );
	
	return 0;
}

